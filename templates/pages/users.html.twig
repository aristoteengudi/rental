{% extends 'base_layout.html.twig' %}
{% block title %}{{ page_title }}{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">

                    <div class="float-right d-none d-md-block">
                        <div class="dropdown">
                            <button type="button" class="btn btn-outline-primary waves-effect waves-light"
                                    data-toggle="modal" data-target="#myModal">
                                <i class="fas fa-plus-circle"></i> Crée user
                            </button>
                        </div>
                    </div>
                    <h4 class="mt-0 header-title">{{ title }}</h4>
                    <table id="datatable-buttons" class="table table-striped table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                        <thead>
                            <tr>
                                <th># id</th>
                                <th>username</th>
                                <th>noms</th>
                                <th>numéro téléphone</th>
                                <th>date création compte</th>
                                <th>date mise à jours compte</th>
                                <td></td>
                            </tr>
                        </thead>

                        <tbody>
                        {% for value in list_users %}
                            <tr>
                                <td>{{ value.user_id }}</td>
                                <td>{{ value.username }}</td>
                                <td>{{ value.name | capitalize }} {{ value.first_name | capitalize}}</td>
                                <td>{{ value.phone_number }}</td>
                                <td>{{ value.created_at }}</td>
                                <td>{{ value.updated_at }}</td>
                                <td>
                                    <button class="btn btn-outline-success waves-effect waves-light" onclick="showFormEdit({{ value.id }})"><i class="far fa-edit"></i></button>
                                    <button class="btn btn-outline-danger waves-effect waves-light" onclick="deactivate({{ value.id }})"><i class="fas fa-lock"></i></button>
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div> <!-- end col -->
    </div> <!-- end row -->

    <!-- Modal edit form-->

    <div id="editModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="display: none;" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form action="" id="submit_form_edit" enctype="multipart/form-data">
                    <div class="modal-header" style="">
                        <h5 class="modal-title mt-0" id="myModalLabel">User info </h5>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    </div>
                    <div class="modal-body">

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary waves-effect" data-dismiss="modal">Fermer</button>
                        <button type="button" class="btn btn-primary waves-effect waves-light" onclick="submitEditForm()"><i class="ti-save mr-2"></i>Save</button>
                    </div>
                </form>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>


    <div id="myModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="display: none;" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form action="" id="create_users" enctype="multipart/form-data">
                    <div class="modal-header" style="">
                        <h5 class="modal-title mt-0" id="myModalLabel">USERS </h5>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    </div>
                    <div class="modal-body">
                        <div class="card-body">
                            <div class="form-group row">
                                <label for="example-text-input" class="col-sm-5 col-form-label">Prénom</label>
                                <div class="col-sm-7">
                                    <input type="text" class="form-control" name="firstname" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="example-text-input" class="col-sm-5 col-form-label">Nom</label>
                                <div class="col-sm-7">
                                    <input type="text" class="form-control" name="name" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="example-text-input" class="col-sm-5 col-form-label">Nom complet</label>
                                <div class="col-sm-7">
                                    <input type="text" class="form-control" name="fullname" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="example-text-input" class="col-sm-5 col-form-label">email</label>
                                <div class="col-sm-7">
                                    <input type="email" class="form-control" name="email" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="example-text-input" class="col-sm-5 col-form-label">phone</label>
                                <div class="col-sm-7">
                                    <input type="text" class="form-control" name="phone_number" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="example-text-input" class="col-sm-5 col-form-label">mot de passe</label>
                                <div class="col-sm-7">
                                    <input type="text" class="form-control" name="password" required>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary waves-effect" data-dismiss="modal">Fermer</button>
                        <button type="submit" class="btn btn-primary waves-effect waves-light" ><i class="ti-save mr-2"></i>Save</button>
                    </div>
                </form>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>

    <script>
        function deactivate(id){

        }

        function Delete(id){

            let post = {
                id: id,
            };

            swal({
                title: "Are you sure?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        let response = fetch('./config-subscriptions?request=delete',{
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json;charset=utf-8'
                            },
                            body: JSON.stringify(post)
                        }).then(response => response.json())
                            .then(result => {
                                if (result.response_code==200){
                                    swal({
                                        title: "Reussi",
                                        text: result.message,
                                        icon: "success",
                                    });
                                    setTimeout(function(){
                                        location.reload();
                                    },2000);

                                    console.log(result.message);

                                }else {
                                    swal("Erreur survenus", result.message, "error");
                                    throw new Error(result.response_code);
                                }
                            })
                    } else {
                        swal("Non supprimé.");
                    }
                });

        }

        function submitEditForm(){

            let myForm = document.getElementById('submit_form_edit');

            let response =  fetch('./users?request=edit', {
                method: 'POST',
                body: new FormData(myForm)
            }).then(response => response.json())
                .then(result => {
                    console.log(result);
                    if (result.response_code==200){
                        swal({
                            title: "Reussi",
                            text: result.message,
                            icon: "success",
                        });
                        setTimeout(function(){
                            location.reload();
                        },2000);

                        console.log(result.message);

                    }else {
                        swal("Erreur survenus", result.message, "error");
                        throw new Error(result.response_code);
                    }

                });
        }
        function showFormEdit(id) {

            let post = {
                id: id,
            };

            let view = $("#editModal");

            let response = fetch('./users?request=getdata',{
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(post)
            }).then(response => response.json())
                .then(result => {
                    view.find('.modal-body').html(result.message);
                    view.modal('show');
                })
        }
        function submitForm() {

            submit_form.onsubmit  = async (e) => {

                e.preventDefault();

                let response = await fetch('./users?request=insert', {
                    method: 'POST',
                    body: new FormData(submit_form)
                });

                let result = await response.json();

                if (result.response_code==200){
                    swal({
                        title: "Reussi",
                        text: result.message,
                        icon: "success",
                    });
                    setTimeout(function(){
                        location.reload();
                    },2000);

                    console.log(result.message);

                }else {
                    swal("Erreur survenus", result.message, "error");
                    throw new Error(result.response_code);
                }
            };
        }

        function createUsers() {

            create_users.onsubmit  = async (e) => {
                e.preventDefault();

                let response = await fetch('./users?request=create_users', {
                    method: 'POST',
                    body: new FormData(create_users)
                });

                let result = await response.json();

                if (result.response_code==200){
                    swal({
                        title: "Reussi",
                        text: result.message,
                        icon: "success",
                    });
                    setTimeout(function(){
                        location.reload();
                    },2000);

                    console.log(result.message);

                }else if (result.response_code==250) {
                    swal("Duplication", result.message, "warning");
                }else {
                    swal("Erreurs survenus", result.message, "error");
                }
            }

        }


        createUsers();
    </script>

{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="public/plugins/datatables/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="public/plugins/datatables/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <!-- Responsive datatable examples -->
    <link href="public/plugins/datatables/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- sweet alert-->
    <script src="public/assets/js/sweetalert.min.js"></script>
    <!-- -->
    <!-- Required datatable js -->
    <script src="public/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="public/plugins/datatables/dataTables.bootstrap4.min.js"></script>
    <!-- Buttons examples -->
    <script src="public/plugins/datatables/dataTables.buttons.min.js"></script>
    <script src="public/plugins/datatables/buttons.bootstrap4.min.js"></script>
    <script src="public/plugins/datatables/jszip.min.js"></script>
    <script src="public/plugins/datatables/pdfmake.min.js"></script>
    <script src="public/plugins/datatables/vfs_fonts.js"></script>
    <script src="public/plugins/datatables/buttons.html5.min.js"></script>
    <script src="public/plugins/datatables/buttons.print.min.js"></script>
    <script src="public/plugins/datatables/buttons.colVis.min.js"></script>
    <!-- Responsive examples -->
    <script src="public/plugins/datatables/dataTables.responsive.min.js"></script>
    <script src="public/plugins/datatables/responsive.bootstrap4.min.js"></script>

    <!-- Datatable init js -->
    <script src="public/assets/pages/datatables.init.js"></script>
{% endblock %}